name: K8s test
on:
  pull_request: {}
  workflow_dispatch: {}
env:
  GO_VERSION: 1.20.5
permissions:
  contents: read

jobs:
  cache-deps:
    name: cache-deps (linux)
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Setup dep cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Pull go deps
        run: go mod download
      
    
  images:
    name: images (linux)
    runs-on: ubuntu-20.04
    needs: [cache-deps]
    timeout-minutes: 30

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Load cached deps
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Load cached build tools
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: .build
          key: ${{ runner.os }}-tools-${{ hashFiles('.go-version','Makefile') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a # v2.8.0
      - name: Build images
        run: make images-no-load
      - name: Export images
        run: tar -czvf images.tar.gz *-image.tar
      - name: Archive images
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          name: images
          path: images.tar.gz


  get-latest-k8s:
    name: get latest k8s
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Latest Kindest Node Release
        id: get-latest-release
        run: |
          k8s_release_info=$(curl -s https://api.github.com/repos/kubernetes/kubernetes/releases/latest)
          kind_release_info=$(curl -s https://api.github.com/repos/kubernetes-sigs/kind/releases/latest)
          k8s_version=$(echo "$k8s_release_info" | jq -r '.tag_name')
          k8s_image="kindest/node:$k8s_version"
          kind_version=$(echo "$kind_release_info" | jq -r '.tag_name')
          new_version_row="[\"$k8s_version\",\"$k8s_image\",\"$kind_version\"]"
          echo "row=$(echo $new_version_row | jq -c)"  >> $GITHUB_OUTPUT
          echo "Collected row: $new_version_row"
    outputs:
      row: ${{ steps.get-latest-release.outputs.row }}
  
  build-matrix:
    name: Build matrix
    runs-on: ubuntu-20.04
    needs: [cache-deps, get-latest-k8s]
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - id: set-matrix
        name: Collect versions
        run: |
          row_json="${{ needs.get-latest-k8s.outputs.row }}"
          echo "Collected row: $row_json"
          k8s_version=$(echo "$row_json" | jq -r '.[0]')
          k8s_image=$(echo "$row_json" | jq -r '.[1]')
          kind_version=$(echo "$row_json" | jq -r '.[2]')
          new_version_row="[\"$k8s_version\",\"$k8s_image\",\"$kind_version\"]"


          # Read the content of the array.txt file
          IFS= readarray -t matrix_lines < ./.github/k8s-version/array.txt
          # Convert each line of the file into a JSON array element
          json_array="["
          for line in "${matrix_lines[@]}"; do
            json_array+="$line,"
          done
          json_array+=$new_version_row
          json_array="${json_array%,}]"
          echo "${{ needs.get-latest-k8s.outputs.row }},"
          echo "test=$json_array" >> $GITHUB_OUTPUT
          echo "Collected tests: $json_array"
    outputs:
      test: ${{ steps.set-matrix.outputs.test }}
  
  integration:
    name: integration (linux)
    runs-on: ubuntu-20.04
    needs: [cache-deps, images, build-matrix]
    timeout-minutes: 45

    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
         num_runners: [1]
         runner_id: [1]
         #Test elements should be added as [KubeCTLVersion, K8s-image, KindVersion]
         test: ${{ fromJson(needs.build-matrix.outputs.test) }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          # The "upgrade" integration test needs the history to ensure
          # that the version number in the source code has been bumped as
          # expected. This action does not fetch tags unless we supply a
          # fetch depth of zero.
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install regctl
        uses: regclient/actions/regctl-installer@b6614f5f56245066b533343a85f4109bdc38c8cc # main
      - name: Load cached deps
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Load cached build tools
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: .build
          key: ${{ runner.os }}-tools-${{ hashFiles('.go-version','Makefile') }}
      - name: Download archived images
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: images
          path: .
      - name: Load archived images
        run: |
          tar xvf images.tar.gz
          make load-images
      - name: Set executable permission for script
        run: chmod +x ./test/integration/test-k8s.sh
      - name: Run integration tests
        env:
          NUM_RUNNERS: ${{ matrix.num_runners }}
          THIS_RUNNER: ${{ matrix.runner_id }}
          KUBECTLVERSION: ${{ matrix.test[0] }}
          K8SIMAGE: ${{ matrix.test[1] }}
          KINDVERSION: ${{ matrix.test[2] }}
          TERM: dumb
          CICD_TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}
        run: ./.github/workflows/scripts/split.sh | xargs ./test/integration/test-k8s.sh